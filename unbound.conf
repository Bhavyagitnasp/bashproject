#
# See unbound.conf(5) man page.
#
# this is a comment.

#Use this to include other text into the file.
#include: "otherfile.conf"

# The server clause sets the main parameters.
server:

	# specify the interfaces to answer queries from by ip-address.
	# The default is to listen to localhost (127.0.0.1 and ::1).
	# specify 0.0.0.0 and ::0 to bind to all available interfaces.
	# specify every interface on a new 'interface:' labelled line.
	# The listen interfaces are not changed on reload, only on restart.
	interface: 10.16.18.126
	interface: 127.0.0.1

	# port to answer queries from
	port: 53

	# Enable IPv4, "yes" or "no".
	do-ip4: yes

	# Enable IPv6, "yes" or "no".
	do-ip6: no

	# control which clients are allowed to make (recursive) queries
	# to this server. Specify classless netblocks with /size and action.
	# By default everything is refused, except for localhost.
	# Choose deny (drop message), refuse (polite error reply),
	# allow (recursive ok), allow_snoop (recursive and nonrecursive ok)
	access-control: 0.0.0.0/0 refuse
	access-control: ::0/0 refuse
	access-control: 127.0.0.0/8 allow
	access-control: 10.16.18.0/25 allow
	access-control: 10.16.18.254/25 allow
	# if given, a chroot(2) is done to the given directory.
	# i.e. you can chroot to the working directory, for example,
	# for extra security, but make sure all files are in that directory.
	#
	# If chroot is enabled, you should pass the configfile (from the
	# commandline) as a full path from the original root. After the
	# chroot has been performed the now defunct portion of the config
	# file path is removed to be able to reread the config after a reload.
	#
	# All other file paths (working dir, logfile, roothints, and
	# key files) can be specified in several ways:
	# 	o as an absolute path relative to the new root.
	# 	o as a relative path to the working directory.
	# 	o as an absolute path relative to the original root.
	# In the last case the path is adjusted to remove the unused portion.
	#
	# The pid file can be absolute and outside of the chroot, it is
	# written just prior to performing the chroot and dropping permissions.
	#
	# Additionally, unbound may need to access /dev/random (for entropy).
	# How to do this is specific to your OS.
	#
	# If you give "" no chroot is performed. The path must not end in a /.
	# chroot: "/var/lib/unbound"
	chroot: ""

	# if given, user privileges are dropped (after binding port),
	# and the given username is assumed. Default is user "unbound".
	# If you give "" no privileges are dropped.
	username: "unbound"

	# the working directory. The relative files in this config are
	# relative to this directory. If you give "" the working directory
	# is not changed.
	directory: "/etc/unbound"

        root-hints: "/etc/unbound/root.hints"

	# the pid file. Can be an absolute path outside of chroot/work dir.
	pidfile: "/var/run/unbound/unbound.pid"

	# Allow the domain (and its subdomains) to contain private addresses.
	# local-data statements are allowed to contain private addresses too.
	private-domain: "s18.as.learn"
	private-domain: "htpbcit.ca"
	
	# Declare the following local zones and allow restricted address by 
	# disabling the default checks 
	# Required for Reverse Lookups of private addresses used in NASP
        local-zone: "18.16.10.in-addr.arpa." nodefault
        local-zone: "s18.as.learn." nodefault

	# if yes, perform prefetching of almost expired message cache entries.
	prefetch: yes

	# module configuration of the server. A string with identifiers
	# separated by spaces. "iterator" or "validator iterator"
	# we aren't performing and DNSsec validation so don't set it
	module-config: "iterator"

	#Include and other conf files
	include: /etc/unbound/local.d/*.conf

# Remote control config section.
remote-control:
	# Enable remote control with unbound-control(8) here.
	# set up the keys and certificates with unbound-control-setup.
	# Note: required for unbound-munin package
	control-enable: yes

	# unbound server key file.
	server-key-file: "/etc/unbound/unbound_server.key"

	# unbound server certificate file.
	server-cert-file: "/etc/unbound/unbound_server.pem"

	# unbound-control key file.
	control-key-file: "/etc/unbound/unbound_control.key"

	# unbound-control certificate file.
	control-cert-file: "/etc/unbound/unbound_control.pem"

#Include other configuration files
include: /etc/unbound/conf.d/*.conf

# Stub and Forward zones

# Stub zones.
# Create entries like below, to make all queries for 'example.com' and
# 'example.org' go to the given list of nameservers. list zero or more
# nameservers by hostname or by ipaddress. 
#
# stub-zone:
#	name: "example.com"
#	stub-addr: 192.0.2.68
# stub-zone:
#	name: "example.org"
#	stub-host: ns.example.com.
#
# The stub-zone/stub-addr must point to AUTHORITATIVE servers. If you want to                     
# point to an internal RECURSIVE server, use forward-zone/forward-addr instead. 

stub-zone:
        name: "as.learn"
        stub-addr: 142.232.221.253
stub-zone:
        name: "htpbcit.ca"
        stub-addr: 142.232.221.253
stub-zone:
	name: "10.in-addr.arpa"
	stub-addr: 142.232.221.253
stub-zone:
        name: "s18.as.learn"
	#stub-addr: 142.232.221.253
	stub-addr: 10.16.255.18
stub-zone:
	name: "18.16.10.in-addr.arpa"
	stub-addr: 10.16.255.18
stub-zone:
	name: "wifi"
	stub-addr: 10.16.18.254

# Forward zones
# Create entries like below, to make all queries for 'example.com' and
# 'example.org' go to the given list of servers. These servers have to handle
# recursion to other nameservers. List zero or more nameservers by hostname
# or by ipaddress. Use an entry with name "." to forward all queries.
# If you enable forward-first, it attempts without the forward if it fails.
# forward-zone:
# 	name: "example.com"
# 	forward-addr: 192.0.2.68
# 	forward-addr: 192.0.2.73@5355  # forward to port 5355.
# 	forward-first: no
# forward-zone:
# 	name: "example.org"
# 	forward-host: fwd.example.com
#
# The forward-zone/forward-addr must point to RECURSIVE servers.

forward-zone:
        name: "bcit.ca"
        forward-addr: 142.232.221.253


